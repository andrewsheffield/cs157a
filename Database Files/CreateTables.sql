-- MySQL Script generated by MySQL Workbench
-- Thu Oct 22 22:49:49 2015
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`user` ;

CREATE TABLE IF NOT EXISTS `mydb`.`user` (
  `UserID` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `FirstName` VARCHAR(40) NULL COMMENT '',
  `LastName` VARCHAR(40) NULL COMMENT '',
  `Email` VARCHAR(100) NULL COMMENT '',
  PRIMARY KEY (`UserID`)  COMMENT '',
  UNIQUE INDEX `UserID_UNIQUE` (`UserID` ASC)  COMMENT '');


-- -----------------------------------------------------
-- Table `mydb`.`screen`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`screen` ;

CREATE TABLE IF NOT EXISTS `mydb`.`screen` (
  `ScreenID` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `Size` INT NULL COMMENT '',
  `IMAX` TINYINT(1) NULL COMMENT '',
  `3D` TINYINT(1) NULL COMMENT '',
  `XD` TINYINT(1) NULL COMMENT '',
  `DBOX` TINYINT(1) NULL COMMENT '',
  PRIMARY KEY (`ScreenID`)  COMMENT '',
  UNIQUE INDEX `ScreenID_UNIQUE` (`ScreenID` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`friend`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`friend` ;

CREATE TABLE IF NOT EXISTS `mydb`.`friend` (
  `UserID` INT NULL COMMENT '',
  `FriendID` INT NULL COMMENT '',
  INDEX `UserID_idx` (`UserID` ASC)  COMMENT '',
  INDEX `FriendID_idx` (`FriendID` ASC)  COMMENT '',
  CONSTRAINT `UserID`
    FOREIGN KEY (`UserID`)
    REFERENCES `mydb`.`user` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FriendID`
    FOREIGN KEY (`FriendID`)
    REFERENCES `mydb`.`user` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`showing`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`showing` ;

CREATE TABLE IF NOT EXISTS `mydb`.`showing` (
  `ShowingID` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `ScreenID` INT NULL COMMENT '',
  `imdbID` VARCHAR(45) NULL COMMENT '',
  `Timestamp` DATETIME NULL COMMENT '',
  PRIMARY KEY (`ShowingID`)  COMMENT '',
  UNIQUE INDEX `showingID_UNIQUE` (`ShowingID` ASC)  COMMENT '',
  INDEX `ScreenID_idx` (`ScreenID` ASC)  COMMENT '',
  CONSTRAINT `ScreenID`
    FOREIGN KEY (`ScreenID`)
    REFERENCES `mydb`.`screen` (`ScreenID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ticket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`ticket` ;

CREATE TABLE IF NOT EXISTS `mydb`.`ticket` (
  `UserID` INT NULL COMMENT '',
  `ShowingID` INT NULL COMMENT '',
  INDEX `UserID_idx` (`UserID` ASC)  COMMENT '',
  INDEX `ShowingID_idx` (`ShowingID` ASC)  COMMENT '',
  CONSTRAINT `TicketHolderID`
    FOREIGN KEY (`UserID`)
    REFERENCES `mydb`.`user` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ShowingID`
    FOREIGN KEY (`ShowingID`)
    REFERENCES `mydb`.`showing` (`ShowingID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`auth`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`auth` ;

CREATE TABLE IF NOT EXISTS `mydb`.`auth` (
  `UserID` INT NOT NULL COMMENT '',
  `hPassword` VARCHAR(128) NULL COMMENT '',
  INDEX `UserID_idx` (`UserID` ASC)  COMMENT '',
  CONSTRAINT `AuthID`
    FOREIGN KEY (`UserID`)
    REFERENCES `mydb`.`user` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


--Added a view for finding friends
DROP VIEW IF EXISTS friendView;
CREATE VIEW friendView AS
SELECT friend.UserID, user.UserID AS FriendID, user.FirstName, user.LastName, user.Email FROM
friend, user
WHERE
friendID = user.UserID
ORDER BY user.LastName ASC, user.FirstName ASC;


--Trigger that removes friends when a user is deleted
DROP TRIGGER IF EXISTS deleteFriendTrigger;
DELIMITER //
CREATE TRIGGER deleteFriendTrigger
BEFORE DELETE ON user FOR EACH ROW
BEGIN
DELETE FROM friend WHERE old.UserID = UserID;
DELETE FROM friend WHERE old.UserID = FriendID;
END //
DELIMITER ;

--Get all users stored procedure
DROP PROCEDURE IF EXISTS getAllUsers;
DELIMITER //
CREATE PROCEDURE getAllUsers ()
BEGIN
  SELECT * FROM user;
END //
DELIMITER ;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
